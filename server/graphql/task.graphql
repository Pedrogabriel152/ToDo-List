"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Task {
  descricao: String!
  id: ID!
  status: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
}

input TaskInput {
  descricao: String
  status: Boolean
}

type ResponGetTask{
  tasks: [Task]
  close: Int!
  total: Int!
}

extend type Query{
  dados: ResponGetTask! @field(resolver: "App\\GraphQL\\Queries\\TaskQueries@getTasks")
  task(id: ID!): SucessTask! @field(resolver: "App\\GraphQL\\Queries\\TaskQueries@getTask")
}

extend type Mutation{
  createTask(descricao: String!): SucessTask! @field(resolver: "App\\GraphQL\\Mutations\\TaskMutation@createTask")
  updateTask(id: ID!, task: TaskInput): SucessTask! @field(resolver: "App\\GraphQL\\Mutations\\TaskMutation@updateTask")
  deleteTask(id: ID!): DeleteTask! @field(resolver: "App\\GraphQL\\Mutations\\TaskMutation@deleteTask")
}

interface respostaCustom {
  # Tipo abstrato
  code: Int!
  message: String!
}

type SucessTask implements respostaCustom {
  code: Int!
  message: String!
  task:Task
}

type DeleteTask implements respostaCustom {
  code: Int!
  message: String!
}